###############################################################################
#
# IAR C/C++ Compiler V7.21.1.1000/W32 for MSP430          30/Nov/2021  21:13:11
# Copyright 1996-2021 IAR Systems AB.
# PC-locked license - IAR Embedded Workbench for MSP430, 8K KickStart Edition 7.21
#
#    __rt_version  =  3
#    __double_size =  32
#    __reg_r4      =  free
#    __reg_r5      =  free
#    __pic         =  no
#    __core        =  430X
#    __data_model  =  small
#    __code_model  =  large
#    Source file   =  
#        D:\Akshay\NCSU\4th year\Fall 2021\ECE
#        306\Project\KamalapuramSridhar_Akshay\serial.c
#    Command line  =  
#        -f C:\Users\aku_1\AppData\Local\Temp\EW5859.tmp ("D:\Akshay\NCSU\4th
#        year\Fall 2021\ECE 306\Project\KamalapuramSridhar_Akshay\serial.c" -lC
#        "D:\Akshay\NCSU\4th year\Fall 2021\ECE
#        306\Project\KamalapuramSridhar_Akshay\Debug\List" -o
#        "D:\Akshay\NCSU\4th year\Fall 2021\ECE
#        306\Project\KamalapuramSridhar_Akshay\Debug\Obj" --no_cse --no_unroll
#        --no_inline --no_code_motion --no_tbaa --debug -D__MSP430FR2355__ -e
#        --double=32 --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 8.5\430\lib\dlib\dl430xlsfn.h" -I ./ --core=430X
#        --data_model=small -On --multiplier=32 --hw_workaround=CPU40
#        --code_model=large)
#    Locale        =  English_USA.1252
#    List file     =  
#        D:\Akshay\NCSU\4th year\Fall 2021\ECE
#        306\Project\KamalapuramSridhar_Akshay\Debug\List\serial.lst
#    Object file   =  
#        D:\Akshay\NCSU\4th year\Fall 2021\ECE
#        306\Project\KamalapuramSridhar_Akshay\Debug\Obj\serial.r43
#
###############################################################################

D:\Akshay\NCSU\4th year\Fall 2021\ECE 306\Project\KamalapuramSridhar_Akshay\serial.c
      1          // ------------------------------------------------------------------------------
      2          //
      3          //  Description: This file contains the code for initializing serial ports
      4          //
      5          //
      6          //  Akshay Kamalapuram Sridhar
      7          //  Nov 2021
      8          //  Built with IAR Embedded Workbench Version: V7.21.1
      9          // ------------------------------------------------------------------------------
     10          
     11          #include  "macros.h"

  #define end (8)
          ^
"D:\Akshay\NCSU\4th year\Fall 2021\ECE 306\Project\KamalapuramSridhar_Akshay\macros.h",211  Warning[Pe047]: 
          incompatible redefinition of macro "end" (declared at line 211)
     12          #include  "msp430.h"

   \                                 In  segment DATA16_AN, at 0x500
   \   union <unnamed> _A_UCA0CTLW0_L
   \                     _A_UCA0CTLW0_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x506
   \   union <unnamed> _A_UCA0BRW_L
   \                     _A_UCA0BRW_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x508
   \   union <unnamed> _A_UCA0MCTLW_L
   \                     _A_UCA0MCTLW_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x51a
   \   union <unnamed> _A_UCA0IE_L
   \                     _A_UCA0IE_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x580
   \   union <unnamed> _A_UCA1CTLW0_L
   \                     _A_UCA1CTLW0_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x586
   \   union <unnamed> _A_UCA1BRW_L
   \                     _A_UCA1BRW_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x588
   \   union <unnamed> _A_UCA1MCTLW_L
   \                     _A_UCA1MCTLW_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x59a
   \   union <unnamed> _A_UCA1IE_L
   \                     _A_UCA1IE_L:
   \   000000                DS8 2
     13          #include  "functions.h"
     14          
     15          void Init_Serial_UCA0(void);
     16          void Init_Serial_UCA1(void);
     17          
     18          extern volatile unsigned int usb_rx_wr;
     19          extern volatile unsigned int usb_rx_rd;
     20          extern volatile unsigned int iot_rx_wr;
     21          extern volatile unsigned int iot_rx_rd;
     22          
     23          extern volatile char IOT_2_PC[SMALL_RING_SIZE]; //ring buffer
     24          extern volatile char PC_2_IOT[SMALL_RING_SIZE]; //ring buffer
     25          
     26          //UCA0 Port initialization

   \                                 In  segment CODE, align 2
     27          void Init_Serial_UCA0(void){
   \                     Init_Serial_UCA0:
     28          
     29            for(int i=BEGINNING; i<SMALL_RING_SIZE; i++){
   \   000000   0F43         MOV.W   #0x0, R15
   \                     ??Init_Serial_UCA0_0:
   \   000002   3F900A00     CMP.W   #0xa, R15
   \   000006   0434         JGE     ??Init_Serial_UCA0_1
     30              IOT_2_PC[i] = BEGINNING; // USB Rx Buffer
   \   000008   CF43....     MOV.B   #0x0, IOT_2_PC(R15)
     31            }
   \   00000C   1F53         ADD.W   #0x1, R15
   \   00000E   F93F         JMP     ??Init_Serial_UCA0_0
     32            iot_rx_wr = BEGINNING;
   \                     ??Init_Serial_UCA0_1:
   \   000010   8243....     MOV.W   #0x0, &iot_rx_wr
     33            iot_rx_rd = BEGINNING;
   \   000014   8243....     MOV.W   #0x0, &iot_rx_rd
     34            
     35          // Configure eUSCI_A0 for UART mode
     36            UCA0CTLW0 = BEGINNING; // Use word register
   \   000018   82430005     MOV.W   #0x0, &0x500
     37            UCA0CTLW0 |= UCSWRST; // Set Software reset enable
   \   00001C   92D30005     BIS.W   #0x1, &0x500
     38            UCA0CTLW0 |= UCSSEL__SMCLK; // Set SMCLK as fBRCLK
   \   000020   B2D080000005 BIS.W   #0x80, &0x500
     39            UCA0CTLW0 &= ~UCMSB; // MSB, LSB select
   \   000026   B2C000200005 BIC.W   #0x2000, &0x500
     40            UCA0CTLW0 &= ~UCSPB; // UCSPB = 0(1 stop bit) OR 1(2 stop bits)
   \   00002C   B2C000080005 BIC.W   #0x800, &0x500
     41            UCA0CTLW0 &= ~UCPEN; // No Parity
   \   000032   B2C000800005 BIC.W   #0x8000, &0x500
     42            UCA0CTLW0 &= ~UCSYNC;
   \   000038   B2C000010005 BIC.W   #0x100, &0x500
     43            UCA0CTLW0 &= ~UC7BIT;
   \   00003E   B2C000100005 BIC.W   #0x1000, &0x500
     44            UCA0CTLW0 |= UCMODE_0;
   \   000044   924200050005 MOV.W   &0x500, &0x500
     45            
     46            // 115200 Baud Rate
     47            UCA0BRW = brw_value;
   \   00004A   A2420605     MOV.W   #0x4, &0x506
     48            UCA0MCTLW = mctl_value ; // UCA0MCTLW = UCSx concatenate UCFx concatenate UCOS16;
   \   00004E   B24051550805 MOV.W   #0x5551, &0x508
     49            
     50            UCA0CTLW0 &= ~ UCSWRST; // Set Software reset enable
   \   000054   92C30005     BIC.W   #0x1, &0x500
     51            UCA0IE |= UCRXIE; // Enable RX interrupt
   \   000058   92D31A05     BIS.W   #0x1, &0x51a
     52          }
   \   00005C   1001         RETA
   \   00005E                REQUIRE _A_UCA0CTLW0_L
   \   00005E                REQUIRE _A_UCA0BRW_L
   \   00005E                REQUIRE _A_UCA0MCTLW_L
   \   00005E                REQUIRE _A_UCA0IE_L
     53          
     54          //UCA1 Port initialization

   \                                 In  segment CODE, align 2
     55          void Init_Serial_UCA1(void){
   \                     Init_Serial_UCA1:
     56            
     57            for(int i=BEGINNING; i<SMALL_RING_SIZE; i++){
   \   000000   0F43         MOV.W   #0x0, R15
   \                     ??Init_Serial_UCA1_0:
   \   000002   3F900A00     CMP.W   #0xa, R15
   \   000006   0434         JGE     ??Init_Serial_UCA1_1
     58              PC_2_IOT[i] = BEGINNING; // USB Rx Buffer
   \   000008   CF43....     MOV.B   #0x0, PC_2_IOT(R15)
     59            }
   \   00000C   1F53         ADD.W   #0x1, R15
   \   00000E   F93F         JMP     ??Init_Serial_UCA1_0
     60            usb_rx_wr = BEGINNING;
   \                     ??Init_Serial_UCA1_1:
   \   000010   8243....     MOV.W   #0x0, &usb_rx_wr
     61            usb_rx_rd = BEGINNING;
   \   000014   8243....     MOV.W   #0x0, &usb_rx_rd
     62            
     63          // Configure eUSCI_A1 for UART mode
     64            UCA1CTLW0 = BEGINNING; // Use word register
   \   000018   82438005     MOV.W   #0x0, &0x580
     65            UCA1CTLW0 |= UCSWRST; // Set Software reset enable
   \   00001C   92D38005     BIS.W   #0x1, &0x580
     66            UCA1CTLW0 |= UCSSEL__SMCLK; // Set SMCLK as fBRCLK
   \   000020   B2D080008005 BIS.W   #0x80, &0x580
     67            UCA1CTLW0 &= ~UCMSB; // MSB, LSB select
   \   000026   B2C000208005 BIC.W   #0x2000, &0x580
     68            UCA1CTLW0 &= ~UCSPB; // UCSPB = 0(1 stop bit) OR 1(2 stop bits)
   \   00002C   B2C000088005 BIC.W   #0x800, &0x580
     69            UCA1CTLW0 &= ~UCPEN; // No Parity
   \   000032   B2C000808005 BIC.W   #0x8000, &0x580
     70            UCA1CTLW0 &= ~UCSYNC;
   \   000038   B2C000018005 BIC.W   #0x100, &0x580
     71            UCA1CTLW0 &= ~UC7BIT;
   \   00003E   B2C000108005 BIC.W   #0x1000, &0x580
     72            UCA1CTLW0 |= UCMODE_0;
   \   000044   924280058005 MOV.W   &0x580, &0x580
     73            
     74            // 115200 Baud Rate
     75            UCA1BRW = brw_value;
   \   00004A   A2428605     MOV.W   #0x4, &0x586
     76            UCA1MCTLW = mctl_value ; // UCA1MCTLW = UCSx concatenate UCFx concatenate UCOS16;
   \   00004E   B24051558805 MOV.W   #0x5551, &0x588
     77            
     78            UCA1CTLW0 &= ~ UCSWRST; // Set Software reset enable
   \   000054   92C38005     BIC.W   #0x1, &0x580
     79            UCA1IE |= UCRXIE; // Enable RX interrupt
   \   000058   92D39A05     BIS.W   #0x1, &0x59a
     80          }  
   \   00005C   1001         RETA
   \   00005E                REQUIRE _A_UCA1CTLW0_L
   \   00005E                REQUIRE _A_UCA1BRW_L
   \   00005E                REQUIRE _A_UCA1MCTLW_L
   \   00005E                REQUIRE _A_UCA1IE_L

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
      4   Init_Serial_UCA0
      4   Init_Serial_UCA1


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      94  Init_Serial_UCA0
      94  Init_Serial_UCA1
       2  _A_UCA0BRW_L
       2  _A_UCA0CTLW0_L
       2  _A_UCA0IE_L
       2  _A_UCA0MCTLW_L
       2  _A_UCA1BRW_L
       2  _A_UCA1CTLW0_L
       2  _A_UCA1IE_L
       2  _A_UCA1MCTLW_L

 
 188 bytes in segment CODE
  16 bytes in segment DATA16_AN
 
 188 bytes of CODE memory
   0 bytes of DATA memory (+ 16 bytes shared)

Errors: none
Warnings: 1
