###############################################################################
#
# IAR C/C++ Compiler V7.21.1.1000/W32 for MSP430          30/Nov/2021  21:13:11
# Copyright 1996-2021 IAR Systems AB.
# PC-locked license - IAR Embedded Workbench for MSP430, 8K KickStart Edition 7.21
#
#    __rt_version  =  3
#    __double_size =  32
#    __reg_r4      =  free
#    __reg_r5      =  free
#    __pic         =  no
#    __core        =  430X
#    __data_model  =  small
#    __code_model  =  large
#    Source file   =  
#        D:\Akshay\NCSU\4th year\Fall 2021\ECE
#        306\Project\KamalapuramSridhar_Akshay\main.c
#    Command line  =  
#        -f C:\Users\aku_1\AppData\Local\Temp\EW56B1.tmp ("D:\Akshay\NCSU\4th
#        year\Fall 2021\ECE 306\Project\KamalapuramSridhar_Akshay\main.c" -lC
#        "D:\Akshay\NCSU\4th year\Fall 2021\ECE
#        306\Project\KamalapuramSridhar_Akshay\Debug\List" -o
#        "D:\Akshay\NCSU\4th year\Fall 2021\ECE
#        306\Project\KamalapuramSridhar_Akshay\Debug\Obj" --no_cse --no_unroll
#        --no_inline --no_code_motion --no_tbaa --debug -D__MSP430FR2355__ -e
#        --double=32 --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 8.5\430\lib\dlib\dl430xlsfn.h" -I ./ --core=430X
#        --data_model=small -On --multiplier=32 --hw_workaround=CPU40
#        --code_model=large)
#    Locale        =  English_USA.1252
#    List file     =  
#        D:\Akshay\NCSU\4th year\Fall 2021\ECE
#        306\Project\KamalapuramSridhar_Akshay\Debug\List\main.lst
#    Object file   =  
#        D:\Akshay\NCSU\4th year\Fall 2021\ECE
#        306\Project\KamalapuramSridhar_Akshay\Debug\Obj\main.r43
#
###############################################################################

D:\Akshay\NCSU\4th year\Fall 2021\ECE 306\Project\KamalapuramSridhar_Akshay\main.c
      1          //------------------------------------------------------------------------------
      2          //
      3          //  Description: This file contains the Main Routine - "While" Operating System
      4          //
      5          //
      6          //  Akshay Kamalapuram Sridhar
      7          //  Oct 2021
      8          //  Built with IAR Embedded Workbench Version: V7.21.1
      9          //------------------------------------------------------------------------------
     10          
     11          //------------------------------------------------------------------------------
     12          #include  "macros.h"

  #define end (8)
          ^
"D:\Akshay\NCSU\4th year\Fall 2021\ECE 306\Project\KamalapuramSridhar_Akshay\macros.h",211  Warning[Pe047]: 
          incompatible redefinition of macro "end" (declared at line 211)
     13          #include  "functions.h"
     14          #include  "msp430.h"

   \                                 In  segment DATA16_AN, at 0x130
   \   union <unnamed> _A_PM5CTL0_L
   \                     _A_PM5CTL0_L:
   \   000000                DS8 2
     15          #include <string.h>
     16          //#include  "LCD.h"
     17          
     18          // Function Prototypes
     19          void main(void);
     20          
     21          // Global Variables

   \                                 In  segment DATA16_Z, align 1, align-sorted
   \   000000                REQUIRE ?cstart_init_zero
     22          volatile char slow_input_down;
   \                     slow_input_down:
   \   000000                DS8 1
     23          
     24          //Display
     25          extern char display_line[NUM_DISPLAY_lINES][NUM_lINES_LAYER];
     26          extern volatile unsigned char display_changed;
     27          extern volatile unsigned char update_display;

   \                                 In  segment DATA16_Z, align 2, align-sorted
   \   000000                REQUIRE ?cstart_init_zero
     28          unsigned int Time_Sequence;
   \                     Time_Sequence:
   \   000000                DS8 2

   \                                 In  segment DATA16_Z, align 2, align-sorted
   \   000000                REQUIRE ?cstart_init_zero
     29          unsigned int Movement_Timer;
   \                     Movement_Timer:
   \   000000                DS8 2

   \                                 In  segment DATA16_Z, align 2, align-sorted
   \   000000                REQUIRE ?cstart_init_zero
     30          unsigned int Counter_Timer;
   \                     Counter_Timer:
   \   000000                DS8 2

   \                                 In  segment DATA16_Z, align 2, align-sorted
   \   000000                REQUIRE ?cstart_init_zero
     31          unsigned int Circle_Timer;
   \                     Circle_Timer:
   \   000000                DS8 2
     32          

   \                                 In  segment CODE, align 2
     33          void main(void){
   \                     main:
     34          //------------------------------------------------------------------------------
     35          // Main Program
     36          // This is the main routine for the program. Execution of code starts here.
     37          // The operating system is Back Ground Fore Ground.
     38          //
     39          //------------------------------------------------------------------------------
     40          
     41          // Disable the GPIO power-on default high-impedance mode to activate
     42          // previously configured port settings
     43            PM5CTL0 &= ~LOCKLPM5;
   \   000000   92C33001     BIC.W   #0x1, &0x130
     44          
     45            Init_Ports();                        // Initialize Ports
   \   000004   ........     CALLA   #Init_Ports
     46            Init_Clocks();                       // Initialize Clock System
   \   000008   ........     CALLA   #Init_Clocks
     47            Init_Conditions();                   // Initialize Variables and Initial Conditions
   \   00000C   ........     CALLA   #Init_Conditions
     48            Init_DAC();
                   ^
Warning[Pe223]: function "Init_DAC" declared implicitly
   \   000010   ........     CALLA   #Init_DAC
     49            Init_LCD();                          // Initialize LCD
   \   000014   ........     CALLA   #Init_LCD
     50            Init_ADC();                          //Initialize ADC
                   ^
Warning[Pe223]: function "Init_ADC" declared implicitly
   \   000018   ........     CALLA   #Init_ADC
     51            Init_Timer_B0();                       // Initialize Timers
   \   00001C   ........     CALLA   #Init_Timer_B0
     52            Init_Timer_B1();
   \   000020   ........     CALLA   #Init_Timer_B1
     53            Init_Timer_B3();
   \   000024   ........     CALLA   #Init_Timer_B3
     54            Init_Serial_UCA0();                     //Initialize Serial
                   ^
Warning[Pe223]: function "Init_Serial_UCA0" declared implicitly
   \   000028   ........     CALLA   #Init_Serial_UCA0
     55            Init_Serial_UCA1();
                   ^
Warning[Pe223]: function "Init_Serial_UCA1" declared implicitly
   \   00002C   ........     CALLA   #Init_Serial_UCA1
     56            
     57            //ClrDisplay();
     58          // Place the contents of what you want on the display, in between the quotes
     59          // Limited to 10 characters per line
     60            strcpy(display_line[DISPLAY_lINE_0], "   ncsu   ");
   \   000030   3D40....     MOV.W   #`?<Constant "   ncsu   ">`, R13
   \   000034   3C40....     MOV.W   #display_line, R12
   \   000038   ........     CALLA   #strcpy
     61            strcpy(display_line[DISPLAY_lINE_1], "IP Address");
   \   00003C   3D40....     MOV.W   #`?<Constant "IP Address">`, R13
   \   000040   3C40....     MOV.W   #display_line + 11, R12
   \   000044   ........     CALLA   #strcpy
     62            strcpy(display_line[DISPLAY_lINE_2], "          ");
   \   000048   3D40....     MOV.W   #`?<Constant "          ">`, R13
   \   00004C   3C40....     MOV.W   #display_line + 22, R12
   \   000050   ........     CALLA   #strcpy
     63            strcpy(display_line[DISPLAY_lINE_3], "          ");
   \   000054   3D40....     MOV.W   #`?<Constant "          ">`, R13
   \   000058   3C40....     MOV.W   #display_line + 33, R12
   \   00005C   ........     CALLA   #strcpy
     64          
     65            enable_display_update();
   \   000060   ........     CALLA   #enable_display_update
     66            display_changed = ALWAYS;
   \   000064   D243....     MOV.B   #0x1, &display_changed
     67            update_display = ALWAYS;
   \   000068   D243....     MOV.B   #0x1, &update_display
     68            Time_Sequence=RESET_STATE;
   \   00006C   8243....     MOV.W   #0x0, &Time_Sequence
     69            Movement_Timer=RESET_STATE;
   \   000070   8243....     MOV.W   #0x0, &Movement_Timer
     70            Counter_Timer=RESET_STATE;
   \   000074   8243....     MOV.W   #0x0, &Counter_Timer
     71            Circle_Timer=RESET_STATE;
   \   000078   8243....     MOV.W   #0x0, &Circle_Timer
     72          
     73          //------------------------------------------------------------------------------
     74          // Begining of the "While" Operating System
     75          //------------------------------------------------------------------------------
     76            while(ALWAYS) {                      // Can the Operating system run 
     77              setThreshold();
                     ^
Warning[Pe223]: function "setThreshold" declared implicitly
   \                     ??main_0:
   \   00007C   ........     CALLA   #setThreshold
     78              //line_traversal();
     79              Iot_cycle();
                     ^
Warning[Pe223]: function "Iot_cycle" declared implicitly
   \   000080   ........     CALLA   #Iot_cycle
     80              display_all();
                     ^
Warning[Pe223]: function "display_all" declared implicitly
   \   000084   ........     CALLA   #display_all
   \   000088   F93F         JMP     ??main_0
   \   00008A   0343         NOP
   \   00008C                REQUIRE _A_PM5CTL0_L
     81            }
     82          }

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "   ncsu   ">`:
   \   000000   2020206E6373 DC8 "   ncsu   "
   \            7520202000  

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "IP Address">`:
   \   000000   495020416464 DC8 "IP Address"
   \            7265737300  

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "          ">`:
   \   000000   202020202020 DC8 "          "
   \            2020202000  

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
      4   main
        4   -> Init_ADC
        4   -> Init_Clocks
        4   -> Init_Conditions
        4   -> Init_DAC
        4   -> Init_LCD
        4   -> Init_Ports
        4   -> Init_Serial_UCA0
        4   -> Init_Serial_UCA1
        4   -> Init_Timer_B0
        4   -> Init_Timer_B1
        4   -> Init_Timer_B3
        4   -> Iot_cycle
        4   -> display_all
        4   -> enable_display_update
        4   -> setThreshold
        4   -> strcpy


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      11  ?<Constant "          ">
      11  ?<Constant "   ncsu   ">
      11  ?<Constant "IP Address">
       2  Circle_Timer
       2  Counter_Timer
       2  Movement_Timer
       2  Time_Sequence
       2  _A_PM5CTL0_L
     140  main
       1  slow_input_down

 
 140 bytes in segment CODE
   2 bytes in segment DATA16_AN
  33 bytes in segment DATA16_C
   9 bytes in segment DATA16_Z
 
 140 bytes of CODE  memory
  33 bytes of CONST memory
   9 bytes of DATA  memory (+ 2 bytes shared)

Errors: none
Warnings: 8
